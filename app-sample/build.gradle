apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'

def gitSha = { ->
    def output = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = output
    }
    return output.toString().trim()
}.memoize()

android {

    namespace "io.noties.markwon.app"

    compileSdkVersion config['compile-sdk']

    defaultConfig {
        applicationId 'io.noties.markwon.app'
        minSdkVersion 23
        targetSdkVersion config['target-sdk']
        versionCode 1
        versionName version

        resConfig 'en'

        setProperty("archivesBaseName", "markwon")

        buildConfigField 'String', 'GIT_SHA', "\"${gitSha()}\""
        buildConfigField 'String', 'GIT_REPOSITORY', '"https://github.com/noties/Markwon"'

        final def scheme = 'markwon'
        buildConfigField 'String', 'DEEPLINK_SCHEME', "\"$scheme\""
        manifestPlaceholders += [
                'deeplink_scheme': scheme
        ]
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_17
        sourceCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    sourceSets {
        main {
            java.srcDirs += '../sample-utils/annotations'
        }
    }

    // do not sign in CI
    if (!project.hasProperty('CI')) {
        signingConfigs {
            config {

                final def keystoreFile = project.file('keystore.jks')
                final def keystoreFilePassword = 'MARKWON_KEYSTORE_FILE_PASSWORD'
                final def keystoreAlias = 'MARKWON_KEY_ALIAS'
                final def keystoreAliasPassword = 'MARKWON_KEY_ALIAS_PASSWORD'

                storeFile keystoreFile
                storePassword ""

                keyAlias ""
                keyPassword ""
            }
        }

        buildTypes {
            release {
                signingConfig signingConfigs.config
            }
        }
    }

    buildFeatures {
        buildConfig true
        viewBinding true
    }
}

kapt {
    arguments {
        arg('markwon.samples.file', "${projectDir}/samples.json".toString())
    }
}

configurations.configureEach {
    exclude group: 'org.jetbrains', module: 'annotations-java5'
}

dependencies {
    kapt project(':sample-utils:processor')
    kapt libs.prism4j.bundler

    implementation project(':markwon-core')
    implementation project(':markwon-editor')
    implementation project(':markwon-ext-latex')
    implementation project(':markwon-ext-strikethrough')
    implementation project(':markwon-ext-tables')
    implementation project(':markwon-ext-tasklist')
    implementation project(':markwon-html')
    implementation project(':markwon-image')
    implementation project(':markwon-inline-parser')
    implementation project(':markwon-linkify')
    implementation project(':markwon-recycler')
    implementation project(':markwon-recycler-table')
    implementation project(':markwon-simple-ext')
    implementation project(':markwon-syntax-highlight')

    implementation project(':markwon-image-picasso')
    implementation project(':markwon-image-glide')
    implementation project(':markwon-image-coil')

//        implementation libs.x.appcompat
    implementation libs.x.recyclerview
    implementation libs.x.cardview
    implementation libs.x.fragment
    implementation libs.okhttp
    implementation libs.prism4j
    implementation libs.gson
    implementation libs.adapt
    implementation libs.debug
    implementation libs.android.svg
    implementation libs.android.gif.impl
    implementation libs.coil

    testImplementation libs.junit
    testImplementation libs.robolectric
    testImplementation libs.mockito
}